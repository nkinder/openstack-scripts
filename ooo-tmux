#!/bin/bash
#
# --------------------------------- USAGE ------------------------------------
# The ooo-tmux script is designed to establish a tmux session with a
# TripleO virtual environment for development or testing purposes.
#
# This script assumes that the undercloud VM is accessible on the hypervisor
# host via SSH using the 'stack' user and the 'undercloud-0' hostname.  The
# script can be run directly on the system where the hypervisor is running,
# or it can be run remotely using the JUMPHOST option to access the hypervisor
# host.  To use the JUMPHOST option, you must set the JUMPHOST environment
# variable to the SSH connection string to the hypervisor system.  Here is an
# example:
#
#    $ JUMPHOST=root@10.0.1.101 ./ooo-tmux
#
# The above example will use the 10.0.1.101 system as a SSH jumphost, which
# allows the SSH keys on the jumphost to be used to access the undercloud and
# overcloud VMs.
#
# By default, ooo-tmux will create a tmux session with two windows as follows:
#
#    Window 0 - Undercloud (stack user)
#    Window 1 - Overcloud controller 0 (heat-admin user)
#
# It is also possible to automatically open additional windows used to perform
# tasks related to specific services.  Currently, there is only support for
# doing this for the Keystone service.  By setting the KEYSTONE environment
# variable to a non-NULL value, an additional tmux window will be opened up
# with two side-by-side panes as follows:
#
#    Left pane - Shell into keystone container (root user)
#    Right pane - Tail of keystone.log in keystone container (root user)
#
# Here is an example execution that will add this additional window:
#
#    $ JUMPHOST=root@10.0.1.101 KEYSTONE=1 ./ooo-tmux
#
# ----------------------------------------------------------------------------

# NGK(TODO) - some more stuff is needed to get tmate to work, as the options around
# sessions appear to be a bit different than using tmux directly.
if [ -n "$USE_TMATE" ]
then
    TMUX_CMD=tmate
else
    TMUX_CMD=tmux
fi

# Figure out how to connect to our undercloud and overcloud.  If tmux/tmate is being run
# from a remote system (as opposed to the system that hosts the OOO VMs), you must
# set JUMPHOST to the ssh connection string for the hypervisor host.
if [ -n "$JUMPHOST" ]
then
    UNDERCLOUD_SSH_CMD="ssh -tt $JUMPHOST 'ssh stack@undercloud-0'"
    OVERCLOUD_IP=`ssh -tt $JUMPHOST "ssh stack@undercloud-0 'source stackrc && openstack server show controller-0 -f value -c addresses'" | sed 's/^.*=//'`
    # We have to strip trailing chars that ssh adds on the local host
    OVERCLOUD_IP=`echo $OVERCLOUD_IP | sed 's/[\r\n ]*$//'`
    OVERCLOUD_SSH_CMD="ssh -tt $JUMPHOST 'ssh -tt -J stack@undercloud-0 heat-admin@$OVERCLOUD_IP'"
else
    UNDERCLOUD_SSH_CMD='ssh stack@undercloud-0'
    OVERCLOUD_IP=`ssh stack@undercloud-0 'source stackrc && openstack server show controller-0 -f value -c addresses | sed 's/^.*=//''`
    OVERCLOUD_SSH_CMD="ssh -tt -J stack@undercloud-0 heat-admin@$OVERCLOUD_IP"
fi

# Start tmux with separate windows for undercloud and overcloud
$TMUX_CMD \
    set-window-option -g allow-rename off \; \
    new-session -d -s tripleo -n undercloud "$UNDERCLOUD_SSH_CMD" \; \
    rename-window undercloud \; \
    new-window -n overcloud "$OVERCLOUD_SSH_CMD"

# Start a window in the keystone container if requested
if [ -n "$KEYSTONE" ]
then
    $TMUX_CMD \
        new-window -t tripleo -n oc-keystone "$OVERCLOUD_SSH_CMD 'sudo docker exec -it keystone /bin/bash'" \; \
        split-window -t tripleo -h \; \
        send-keys "$OVERCLOUD_SSH_CMD 'sudo docker exec -it keystone tail -f /var/log/keystone/keystone.log'" C-m
fi

# NGK(TODO) - this probably is using the wrong container name.  Determine the correct
# container name(s) and fix this.
# Start a window in the barbican container if requested
if [ -b "$BARBICAN" ]
then
    $TMUX_CMD \
        new-window -t tripleo -n oc-barbican "$OVERCLOUD_SSH_CMD 'sudo docker exec -it barbican /bin/bash'" \; \
        split-window -t tripleo -h \; \
        send-keys "$OVERCLOUD_SSH_CMD 'sudo docker exec -it barbican tail -f /var/log/barbican/barbican.log'" C-m
fi

# Attach to our session with the undercloud window selected
$TMUX_CMD select-window -t tripleo:0
$TMUX_CMD attach-session -t tripleo
